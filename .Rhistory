Str <- paste0(Absolute, ' (', percent, '%)')
# calculate interval position
df <-  data.frame(Name, Absolute, Value, Str) %>%
mutate(Name = factor(Name, levels = Name),
Pos = cumsum(lag(Value, default = 0)) + Value/2)
TypeOfData <- df
TypeOfData
df <- TypeOfData
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.22,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.15), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08), size = 5) +
labelonly +
scale_fill_manual(values = lowGreens2)
# ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot, width=10, height=8)
ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/typeOfData_horizontal_raw.png", plot=thisPlot)
typeHorizontalPlot <- thisPlot
typeHorizontalPlot
library(magick)
tmp1 <- image_read('bitmap/typeOfData_horizontal_raw.png')
tmp2 <- image_trim(tmp1)
image_write(tmp2, path='bitmap/typeOfData_horizontal.png', format='png')
typeOfData_img <- tmp2
image_info(tmp1)
image_info(tmp2)
df <- studyDesign_df
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.22,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.15), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.1), size = 5) +
labelonly +
scale_fill_manual(values = lowReds3)
ggsave(file="svg/studyDesign_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/studyDesign_horizontal_raw.png", plot=thisPlot)
designHorizontalPlot <- thisPlot
designHorizontalPlot
df <- studyDesign_df
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.22,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.15), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.1), size = 5) +
labelonly +
scale_fill_manual(values = lowReds3)
ggsave(file="svg/studyDesign_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/studyDesign_horizontal_raw.png", plot=thisPlot)
designHorizontalPlot <- thisPlot
designHorizontalPlot
df <- studyDesign_df
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.14), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.09), size = 5) +
labelonly +
scale_fill_manual(values = lowReds3)
ggsave(file="svg/studyDesign_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/studyDesign_horizontal_raw.png", plot=thisPlot)
designHorizontalPlot <- thisPlot
designHorizontalPlot
df <- studyDesign_df
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.13), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08), size = 5) +
labelonly +
scale_fill_manual(values = lowReds3)
ggsave(file="svg/studyDesign_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/studyDesign_horizontal_raw.png", plot=thisPlot)
designHorizontalPlot <- thisPlot
designHorizontalPlot
df <- TypeOfData
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.13), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08), size = 5) +
labelonly +
scale_fill_manual(values = lowGreens2)
# ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot, width=10, height=8)
ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/typeOfData_horizontal_raw.png", plot=thisPlot)
typeHorizontalPlot <- thisPlot
typeHorizontalPlot
df <- TypeOfData
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Name),
position = position_fill(vjust = 0.13), size = 5) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08), size = 5) +
labelonly +
scale_fill_manual(values = lowGreens2)
# ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot, width=10, height=8)
ggsave(file="svg/typeOfData_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/typeOfData_horizontal_raw.png", plot=thisPlot)
typeHorizontalPlot <- thisPlot
typeHorizontalPlot
df <- dataSource
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.19,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08),
alpha = ifelse(df$Name == 'Peer-reviewed', 0, 1),
size = 4, angle = 90, hjust = 0.35) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.11),
alpha = ifelse(df$Name == 'Peer-reviewed', 1, 0),
size = 5, hjust = 0.35) +
labelonly +
scale_fill_manual(values = midPurples4)
ggsave(file="svg/dataSource_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/dataSource_horizontal_raw.png", plot=thisPlot)
dataSourceHorizontalPlot <- thisPlot
dataSourceHorizontalPlot
thisPlot
df <- dataSource
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08),
alpha = ifelse(df$Name == 'Peer-reviewed', 0, 1),
size = 4, angle = 90, hjust = 0.35) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.1),
alpha = ifelse(df$Name == 'Peer-reviewed', 1, 0),
size = 5, hjust = 0.35) +
labelonly +
scale_fill_manual(values = midPurples4)
ggsave(file="svg/dataSource_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/dataSource_horizontal_raw.png", plot=thisPlot)
dataSourceHorizontalPlot <- thisPlot
dataSourceHorizontalPlot
thisPlot
df <- dataSource
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08),
alpha = ifelse(df$Name == 'Peer-reviewed', 0, 1),
size = 4, angle = 90, hjust = 0.35) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.11),
alpha = ifelse(df$Name == 'Peer-reviewed', 1, 0),
size = 5, hjust = 0.35) +
labelonly +
scale_fill_manual(values = midPurples4)
ggsave(file="svg/dataSource_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/dataSource_horizontal_raw.png", plot=thisPlot)
dataSourceHorizontalPlot <- thisPlot
dataSourceHorizontalPlot
thisPlot
df <- dataSource
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.22,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08),
alpha = ifelse(df$Name == 'Peer-reviewed', 0, 1),
size = 4, angle = 90, hjust = 0.35) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.11),
alpha = ifelse(df$Name == 'Peer-reviewed', 1, 0),
size = 5, hjust = 0.35) +
labelonly +
scale_fill_manual(values = midPurples4)
ggsave(file="svg/dataSource_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/dataSource_horizontal_raw.png", plot=thisPlot)
dataSourceHorizontalPlot <- thisPlot
dataSourceHorizontalPlot
thisPlot
df <- dataSource
thisPlot <- ggplot(data = df, aes(x = Pos, y = 0.2,
width = Value, fill = Name)) +
geom_col(position = "identity", show.legend = FALSE) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.08),
alpha = ifelse(df$Name == 'Peer-reviewed', 0, 1),
size = 4, angle = 90, hjust = 0.35) +
geom_text(aes(label = Str),
position = position_fill(vjust = 0.11),
alpha = ifelse(df$Name == 'Peer-reviewed', 1, 0),
size = 5, hjust = 0.35) +
labelonly +
scale_fill_manual(values = midPurples4)
ggsave(file="svg/dataSource_horizontal_raw.svg", plot=thisPlot)
ggsave(file="bitmap/dataSource_horizontal_raw.png", plot=thisPlot)
dataSourceHorizontalPlot <- thisPlot
dataSourceHorizontalPlot
thisPlot
library(magick)
tmp1 <- image_read('bitmap/dataSource_horizontal_raw.png')
tmp2 <- image_trim(tmp1)
image_write(tmp2, path='bitmap/dataSource_horizontal.png', format='png')
dataSource_img <- tmp2
image_info(tmp1)
image_info(tmp2)
library(magick)
tmp1 <- image_read('bitmap/typeOfData_horizontal_raw.png')
tmp2 <- image_trim(tmp1)
image_write(tmp2, path='bitmap/typeOfData_horizontal.png', format='png')
typeOfData_img <- tmp2
image_info(tmp1)
image_info(tmp2)
library(magick)
tmp1 <- image_read('bitmap/studyDesign_horizontal_raw.png')
tmp2 <- image_trim(tmp1)
image_write(tmp2, path='bitmap/studyDesign_horizontal.png', format='png')
studyDesign_img <- tmp2
image_info(tmp1)
image_info(tmp2)
# heatmap with marginal histograms
devtools::install_github("ropensci/iheatmapr")
install.packages('magrittr')
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
# devtools::install_github("ropensci/iheatmapr")
pkgs <- c('magrittr', 'glue', 'rlang', 'fansi', 'yaml', 'jsonlite')
remove.packages(pkgs)
install.packages('magrittr')
install.packages("magrittr")
detach(pkgs)
detach("package:glue", unload=TRUE)
install.packages("glue")
install.packages("glue")
devtools::install_github("ropensci/iheatmapr")
install.packages("rlang")
remove.packages('rlang')
install.packages("rlang")
library(iheatmapr)
# detach("package:glue", unload=TRUE)
# remove.packages(pkgs)
install.packages(pkgs)
library(iheatmapr)
data(measles, package = "iheatmapr")
main_heatmap(measles, name = "Measles<br>Cases", x_categorical = FALSE,
layout = list(font = list(size = 8))) %>%
add_col_groups(ifelse(1930:2001 < 1961,"No","Yes"),
side = "bottom", name = "Vaccine<br>Introduced?",
title = "Vaccine?",
colors = c("lightgray","blue")) %>%
add_col_labels(ticktext = seq(1930,2000,10),font = list(size = 8)) %>%
add_row_labels(size = 0.3,font = list(size = 6)) %>%
add_col_summary(layout = list(title = "Average<br>across<br>states"),
yname = "summary")  %>%
add_col_title("Measles Cases from 1930 to 2001", side= "top") %>%
add_row_summary(groups = TRUE,
type = "bar",
layout = list(title = "Average<br>per<br>year",
font = list(size = 8)))
library(datasets)
library(reshape2)
Indometh_matrix <- acast(Indometh, Subject ~ time, value.var = "conc")
Indometh_matrix <- Indometh_matrix[as.character(1:6),]
rownames(Indometh_matrix) <- paste("Patient",rownames(Indometh_matrix))
Indometh_patient_cor <- cor(t(Indometh_matrix))
patient_max_conc <- apply(Indometh_matrix,1,max)
patient_min_conc <- apply(Indometh_matrix,1,min)
patient_groups <- c("A","A","B","A","B","A") # Arbitrary groups
example_heatmap <- main_heatmap(Indometh_patient_cor, name = "Correlation")
example_heatmap
Indometh_patient_cor
str(Indometh_patient_cor)
bc <- matrix(1:15, nrow=5, byrow=TRUE)
rownames(bc) <- c('Resource management', 'CBNRM', 'Health intervention', 'Livelihood intervention', 'Habitat management')
colnames(bc) <- c('Economic living standards', 'Material living standards', 'Health', 'Social relations', 'Governance & empowerment')
bc
bc <- matrix(1:25, nrow=5, byrow=TRUE)
rownames(bc) <- c('Resource management', 'CBNRM', 'Health intervention', 'Livelihood intervention', 'Habitat management')
colnames(bc) <- c('Economic living standards', 'Material living standards', 'Health', 'Social relations', 'Governance & empowerment')
bc
bc <- matrix(sample.int(5, 25), nrow=5, byrow=TRUE)
bc <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
rownames(bc) <- c('Resource management', 'CBNRM', 'Health intervention', 'Livelihood intervention', 'Habitat management')
colnames(bc) <- c('Economic living standards', 'Material living standards', 'Health', 'Social relations', 'Governance & empowerment')
bc
main_heatmap(bc)
extract_xls <- "data/DATA EXTRACTION FINAL (13).xlsx"
de <- read_excel(extract_xls, sheet = "Summary DE")
library(tidyverse)
de <- read_excel(extract_xls, sheet = "Summary DE")
de <- read_excel(extract_xls, sheet = "Summary DE")
library(readxl)
library(RColorBrewer)
de <- read_excel(extract_xls, sheet = "Summary DE")
colnames(de)
forMatrix <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
forMatrix
# won't limit combos because Author-date only shows up once
inOut <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
inOut
colnames(inOut) <- c('Author', 'Intervention', 'Outcome')
inOut
# won't limit combos because Author-date only shows up once
inOutNA <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
colnames(inOutNA) <- c('Author', 'Intervention', 'Outcome')
# if all NA remove row
inOut[rowSums(is.na(inOutNA)) != ncol(inOutNA), ]
inOut
# won't limit combos because Author-date only shows up once
inOutNA <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
colnames(inOutNA) <- c('Author', 'Intervention', 'Outcome')
# if all NA remove row
inOut <- inOutNA[rowSums(is.na(inOutNA)) != ncol(inOutNA), ]
str(inOut)
str(inOutNA)
inOut
View(inOut)
tmp <- inOut %>%
fill(Author)
tmp
tmp <- inOut %>%
fill(Author) %>%
fill(Intervention) %>%
fill(Outcome)
View(tmp)
extract_xls <- "data/DATA EXTRACTION FINAL (13).xlsx"
de <- read_excel(extract_xls, sheet = "Summary DE")
# won't limit combos because Author-date only shows up once
inOutNA <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
colnames(inOutNA) <- c('Author', 'Intervention', 'Outcome')
# if all NA remove row
inOut <- inOutNA[rowSums(is.na(inOutNA)) != ncol(inOutNA), ]
inOut <- inOut %>%
fill(Author) %>%
fill(Intervention) %>%
fill(Outcome)
tmp <- inOut %>%
mutate(Intervention = replace(Intervention, Intervention=='Resource Use Management', 'Resource use management'))
View(tmp)
inOut <- inOut %>%
mutate(Intervention = replace(Intervention, Intervention=='Resource Use Management', 'Resource use management')) %>%
mutate(Outcome = replace(Outcome, Outcome=='Governance (and empowerment)', 'Governance & empowerment'))
reduction <- unique(inOut())
reduction <- unique(inOut)
str(reduction)
View(reduction)
remove(reduction)
reductionist <- unique(inOut) # uniqueness test includes Author column
View(reductionist)
Freqs <- table(reductionist$Intervention, reductionist$Outcome)
Freqs
t1 <- reductionist %>%
tabyl(Intervention, Outcome)
t1
library(tabyl)
library(janitor)
t1 <- reductionist %>%
tabyl(Intervention, Outcome)
t1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(RColorBrewer)
extract_xls <- "data/DATA EXTRACTION FINAL (13).xlsx"
de <- read_excel(extract_xls, sheet = "Summary DE")
# won't limit combos because Author-date only shows up once
inOutNA <- de %>%
select('Author-date', 'Intervention category', 'Outcome category')
colnames(inOutNA) <- c('Author', 'Intervention', 'Outcome')
# if all NA remove row
inOut <- inOutNA[rowSums(is.na(inOutNA)) != ncol(inOutNA), ]
inOut <- inOut %>%
fill(Author) %>%
fill(Intervention) %>%
fill(Outcome)
inOut <- inOut %>%
mutate(Intervention = replace(Intervention, Intervention=='Resource Use Management', 'Resource use management')) %>%
mutate(Outcome = replace(Outcome, Outcome=='Governance (and empowerment)', 'Governance & empowerment'))
reductionist <- unique(inOut) # uniqueness test includes Author column
head(reductionist)
Freqs <- table(reductionist$Intervention, reductionist$Outcome)
Freqs
library(janitor)
t1 <- reductionist %>%
tabyl(Intervention, Outcome)
t1
library(janitor)
t1 <- reductionist %>%
tabyl(Intervention, Outcome)
t1
extract_xls <- "data/DATA EXTRACTION FINAL (13).xlsx"
de <- read_excel(extract_xls, sheet = "Summary DE", .name_repair = "minimal")
reductionist
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(RColorBrewer)
extract_xls <- "data/DATA EXTRACTION FINAL (14).xlsx"
DE <- read_excel(extract_xls, sheet = "Summary DE", .name_repair = "minimal")
inOutNA <- DE %>%
select('Author-date', 'Intervention category', 'Outcome category')
colnames(inOutNA) <- c('Author', 'Intervention', 'Outcome')
# if NA in all 3 columns, remove row
inOut <- inOutNA[rowSums(is.na(inOutNA)) != ncol(inOutNA), ]
inOut
inOut <- inOut %>%
fill(Author) %>%
fill(Intervention) %>%
fill(Outcome)
inOut <- inOut %>%
mutate(Intervention = replace(Intervention, Intervention=='Resource Use Management', 'Resource use management')) %>%
mutate(Outcome = replace(Outcome, Outcome=='Governance (and empowerment)', 'Governance & empowerment'))
reductionist <- unique(inOut) # uniqueness test includes Author column
reductionist
Freqs <- table(reductionist$Intervention, reductionist$Outcome)
Freqs
library(janitor)
t1 <- reductionist %>%
tabyl(Intervention, Outcome)
t1
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(janitor)
rownames(t1)
str(t1)
colnames(t1)
length(t1)
colnames(t1)[2:length(t1)]
t1[1]
t1[1, 2:7]
t1[1][2:7]
t1[1]
t1[1, 2:7]
t1[1]
str(t1)
t1
m1 <- as.matrix(t1)
str(m1)
install.packages('ztable')
library(ztable)
Freqs
options(ztable.type="html")
z=ztable(Freqs)
print(z,caption="Intervention and Outcome matrix")
Freqs <- table(reductionist$Intervention, reductionist$Outcome)
library(ztable)
options(ztable.type="html")
z=ztable(Freqs)
print(z,caption="Intervention and Outcome matrix")
str(z)
t1
t1[1,1]
z
Freqs
Freqs[1,1]
main_heatmap(Freqs)
main_heatmap(bc)
bcio <- as.matrix(Freqs)
main_heatmap(bcio)
bcio
str(bcio)
str(bc)
bcio
main_heatmap(bc)
typeof(bc[1,1])
typeof(bcio[1,1])
typeof(bcio[2,1])
main_heatmap(bcio)
bcio_vec <- c(Freqs)
bcio_vec
typeof(bcio_vec)
length(bcio_vec)
bcio_table_matrix <- as.matrix(Freqs)
bcio_vector <- c(Freqs)
# bcio <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
bcio <- matrix(bcio_vector, nrow=7, byrow=TRUE)
bcio
# bcio <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
bcio <- matrix(bcio_vector, nrow=7, byrow=FALSE)
bcio
# bcio <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
bcio <- matrix(bcio_vector, nrow=6, byrow=FALSE)
rownames(bc) <- c('Resource management', 'CBNRM', 'Health intervention', 'Livelihood intervention', 'Habitat management')
rownames(bcio) <- c('Resource management', 'CBNRM', 'Health intervention', 'Livelihood intervention', 'Habitat management')
# bcio <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
bcio <- matrix(bcio_vector, nrow=6, byrow=FALSE)
rownames(bcio) <- c('CBNRM', 'CBNRM and Health intervention', 'Habitat management', 'Health intervention', 'Livelihood intervention', 'Resource use management', )
# bcio <- matrix(sample.int(5, 25, replace=TRUE), nrow=5, byrow=TRUE)
bcio <- matrix(bcio_vector, nrow=6, byrow=FALSE)
bcio
rownames(bcio) <- c('CBNRM', 'CBNRM and Health intervention', 'Habitat management', 'Health intervention', 'Livelihood intervention', 'Resource use management')
colnames(bcio) <- c('Economic living standards', 'Education', 'Governance', 'Health', 'Material living standards', 'Social relations', 'Subjective well-being')
bcio
main_heatmap(bcio)
